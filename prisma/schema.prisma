// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin{
  id Int @default(autoincrement()) @id
  email String @unique
  password String
  createdAt DateTime @default(now()) 
}

model User{
  id Int @default(autoincrement()) @id
  firstName String 
  lastName String 
  email String @unique
  password String
  createdAt DateTime @default(now()) 
  bookings Bookings[]
}

model Jobs{
  id Int @default(autoincrement()) @id
  url String // url from which the data is scraped
  isComplete Boolean @default(false)
  status String @default("active")
  jobType Json // to store some misc things
  createdAt DateTime @default(now()) 
}

model Trips{
  id String @id @unique
  name String
  nights Int
  days Int
  destinationItinerary Json
  images Json
  inclusions Json
  themes Json
  price Int
  destinationDetails Json
  detailedItinerary Json
  description String
  packageItinerary Json
  scrappedOn DateTime @default(now())
}

model Bookings{
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  date DateTime
  bookingType String // trip or hotel or flight
  bookingTypeId String
  userId Int
  totalAmount Int
  paymentIntent String @unique 
  isCompleted Boolean @default(false)
  user User @relation(fields: [userId],references: [id]) //the user field in the Bookings model is a foreign key relationship. It indicates that the userId field in the Bookings model refers to the id field in the User model.
}